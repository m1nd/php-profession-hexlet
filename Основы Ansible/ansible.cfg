inventory.ini

[webservers]
web[1:3].hexlet.io

[jobservers]
job1.hexlet.io
job2.hexlet.io

[appservers:children]
webservers
jobservers
------------
playbook.yml

 - hosts: webservers
   tasks:
    - copy: src=files/hosts dest=/tmp/hosts

    - name: Set file mode for `/tmp/hosts` to 777
      file: path=/tmp/hosts mode=0777

    - stat: path=/tmp/hosts
      register: result

    - name: Check file mode for `/tmp/hosts`
      fail: msg="Expected `0777` mode, but was `{{ result.stat.mode }}`"
      when: result.stat.mode != '0777'
-------------
- hosts: all
  gather_facts: no

  tasks:
    - name: special task
      shell: echo 'yeah!'
      register: result
      # BEGIN (write your solution here)
      tags: special
      # END

    - name: 'Check tags'
      fail: msg='Expected result is defined'
      when: result is not defined
      tags: special
--------------
- hosts: all
  gather_facts: no

  tasks:
    - shell: echo 'write the nginx config file'
      # BEGIN (write your solution here)
      notify:
         - restart nginx
     # END

    - meta: flush_handlers

    - name: 'Check handler'
      fail: msg='Expected nginx to be restarted'
      when: result is not defined

  handlers:
    - name: restart nginx
      shell: echo 'nginx restarting ...'
      register: result
-------------
- hosts: all
  gather_facts: no
  # BEGIN (write your solution here)
  vars:
    http_port: 80
  # END


  tasks:
    - name: 'Check http_port'
      fail: msg='Expected http_port is 80'
      when: http_port is not defined or http_port != 80
---------------
inventory.ini

[webservers]
web1.hexlet.io

[jobservers]
job1.hexlet.io

[webservers:vars]
version=1
memcache_port=5000

[jobservers:vars]
version=2
redis_port=6390

[all:vars]
ansible_connection=local
database=postgresql
-----------------
- hosts: all
  gather_facts: no

  tasks:
    - name: 'Check gather facts set to `no`'
      fail: msg='Expected no but yes'
      when: ansible_distribution is defined
------------------
- hosts: all
  gather_facts: no

  vars:
    users:
      - one
      - two
      - free

  tasks:
    - user: name={{ item }}
      with_items:					; with_items: '{{ users }}'
        - users
      register: result

    - name: 'Check users'
      fail: msg='Exected users created'
      when: not result.changed
----------------
- hosts: all
  gather_facts: no

  vars:
    nodejs_install_method: package

  tasks:
    - shell: echo 'install nodejs from package'
      when: nodejs_install_method == "package"

    - shell: echo 'install nodejs from source'
      register: nodejs_result
      when: nodejs_install_method == "source"

    - name: "Check nodejs"
      fail: msg="Expected nodejs to be installed from package"
      when: not (nodejs_result | skipped)
--------------
- hosts: all
  gather_facts: no
  vars:
    list: [3, 4, 1]
    result: "{{ list | max }}"

  tasks:
    - name: 'Check result'
      fail: msg='Expected `4` but was `{{ result }}`'
      when: result is not defined or result != '4'
---------------
- hosts: all
  gather_facts: no

  tasks:
    - name: special task
      shell: echo 'hi'
      register: result
  
    - name: 'Check result'
      fail: msg='Expected result is registered'
      when: result is not defined

    - debug: var=result
-----------------
- hosts: all
  gather_facts: no
  tasks:
    - include: foo.yml
  
    - name: 'Check result'
      fail: msg='`foo.yml` is expected to be included'
      when: result is not defined
----------------

























































